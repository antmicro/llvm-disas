.before_script: &before_script
  before_script:
    # BUILD_RPATH_USE_ORIGIN is available since CMake 3.14 (unavailable in default repositories)
    - apt update
    - apt install -y ca-certificates
    - echo "deb https://deb.debian.org/debian buster-backports main" >>/etc/apt/sources.list
    - apt update
    - apt install -y cmake/buster-backports g++$TOOLCHAIN_SUFFIX xz-utils

.build_script: &build_script
  script:
    # ":" is a no-op in bash
    - if [ "$RUN_CTEST" = "true" ]; then CTEST="ctest -v"; else CTEST=":"; fi
    - mkdir shared
    - cd shared
    - cmake -DCMAKE_BUILD_TYPE=Release $CMAKE_XVARS ..
    - make VERBOSE=1
    - $CTEST
    - cd ..
    - mkdir static
    - cd static
    - cmake -DCMAKE_BUILD_TYPE=Release $CMAKE_XVARS -DSTATIC_LLVM_DISAS=ON ..
    - make VERBOSE=1
    - $CTEST

.build_artifacts: &build_artifacts
  artifacts:
    paths:
      - shared/libllvm-disas.*
      - shared/test-app
      - static/libllvm-disas.a
      - static/test-app
    when: always

linux-aarch64:
  image: debian:latest
  variables:
    CMAKE_XVARS:      "-DCMAKE_TOOLCHAIN_FILE=../.ci/aarch64-toolchain.cmake"
    TOOLCHAIN_SUFFIX: "-aarch64-linux-gnu"
  <<: *before_script
  <<: *build_script
  <<: *build_artifacts

linux-arm:
  image: debian:latest
  variables:
    CMAKE_XVARS:      "-DCMAKE_TOOLCHAIN_FILE=../.ci/arm-toolchain.cmake"
    TOOLCHAIN_SUFFIX: "-arm-linux-gnueabihf"
  <<: *before_script
  <<: *build_script
  <<: *build_artifacts

linux-x86_64:
  image: debian:latest
  variables:
    RUN_CTEST: "true"
  <<: *before_script
  <<: *build_script
  after_script:
    - ldd shared/libllvm-disas.so
  <<: *build_artifacts

macos:
  tags: ["renode-macos"]
  variables:
    RUN_CTEST: "true"
  <<: *build_script
  after_script:
    - otool -L shared/libllvm-disas.dylib
  <<: *build_artifacts

windows:
  tags: ["renode-windows"]
  script:
    - bash .ci/windows.sh
    - ldd shared/libllvm-disas.dll
  artifacts:
    paths:
      - shared/libllvm-disas.dll
      - shared/test-app.exe
    when: always
