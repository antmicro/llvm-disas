stages:
  - native
  - cross

variables:
  ARTIFACTS_NAME: "llvm-disas-$CI_PIPELINE_ID-$CI_JOB_NAME"

.before_script_content: &before_script_content |
  apt update
  apt install -y cmake g++$TOOLCHAIN_SUFFIX patch python3 xz-utils

.before_script: &before_script
  before_script:
    - *before_script_content

.cross_before_script: &cross_before_script
  before_script:
    - mv shared host-shared
    - rm -rf static
    - *before_script_content

.build_script: &build_script
  script:
    - set -ex
    # ":" is a no-op in bash
    - if [ "$RUN_CTEST" = "true" ]; then CTEST="ctest -V"; else CTEST=":"; fi
    - mkdir shared
    - cd shared
    - cmake -DCMAKE_BUILD_TYPE=Release -DBUILD_LLVM_LIBS=ON $CMAKE_XVARS ..
    - make VERBOSE=1
    - $CTEST
    - cd ..
    - mkdir static
    - cd static
    - cmake -DCMAKE_BUILD_TYPE=Release -DBUILD_LLVM_LIBS=ON $CMAKE_XVARS -DSTATIC_LLVM_DISAS=ON ..
    - make VERBOSE=1
    - $CTEST

.build_artifacts: &build_artifacts
  artifacts:
    name: "$ARTIFACTS_NAME"
    paths:
      - shared/libllvm-disas.*
      - shared/test-app
      - shared/llvm-tblgen # Will not be present in the cross stage
      - static/libllvm-disas.a
      - static/test-app
    when: always

linux-aarch64:
  stage: cross
  image: debian:bullseye
  dependencies:
    - linux-x86_64
  variables:
    CMAKE_XVARS:      "-DCMAKE_TOOLCHAIN_FILE=../.ci/aarch64-toolchain.cmake -DLLVM_TABLEGEN=$CI_PROJECT_DIR/host-shared/llvm-tblgen"
    TOOLCHAIN_SUFFIX: "-aarch64-linux-gnu"
  <<: *cross_before_script
  <<: *build_script
  <<: *build_artifacts

linux-arm:
  stage: cross
  image: debian:bullseye
  dependencies:
    - linux-x86_64
  variables:
    CMAKE_XVARS:      "-DCMAKE_TOOLCHAIN_FILE=../.ci/arm-toolchain.cmake -DLLVM_TABLEGEN=$CI_PROJECT_DIR/host-shared/llvm-tblgen"
    TOOLCHAIN_SUFFIX: "-arm-linux-gnueabihf"
  <<: *cross_before_script
  <<: *build_script
  <<: *build_artifacts

linux-x86_64:
  stage: native
  image: debian:bullseye
  variables:
    RUN_CTEST: "true"
  <<: *before_script
  <<: *build_script
  after_script:
    - ldd shared/libllvm-disas.so
  <<: *build_artifacts

macos:
  stage: native
  tags: ["renode-macos"]
  variables:
    RUN_CTEST: "true"
  <<: *build_script
  after_script:
    - otool -L shared/libllvm-disas.dylib
  <<: *build_artifacts

windows:
  stage: native
  tags: ["renode-windows"]
  script:
    - bash .ci/windows.sh
    - ldd shared/libllvm-disas.dll
  artifacts:
    name: "$ARTIFACTS_NAME"
    paths:
      - shared/libllvm-disas.dll
      - shared/test-app.exe
    when: always
